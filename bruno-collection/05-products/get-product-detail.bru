meta {
  name: Get Product Detail
  type: http
  seq: 2
}

get {
  url: http://localhost:8001/products/{{product_id}}
  body: none
  auth: none
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response has product data", function() {
    expect(res.getBody()).to.be.an('object');
    expect(res.getBody()).to.have.property('id');
    expect(res.getBody()).to.have.property('title');
  });
  
  test("Response includes seller information", function() {
    expect(res.getBody()).to.have.property('seller_info');
    if (res.getBody().seller_info) {
      expect(res.getBody().seller_info).to.have.property('name');
      expect(res.getBody().seller_info).to.have.property('address');
      expect(res.getBody().seller_info).to.have.property('kakao_open_profile');
      expect(res.getBody().seller_info.name).to.be.a('string');
      expect(res.getBody().seller_info.kakao_open_profile).to.be.a('string');
    }
  });
}
